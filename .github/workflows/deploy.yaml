name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: plantasia
  EKS_CLUSTER: prod-plantasia
  EKS_ROLE_ARN: arn:aws:iam::476114158430:role/eks-cluster-access-role

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ env.EKS_ROLE_ARN }}
        role-duration-seconds: 1200

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install AWS IAM Authenticator
      run: |
        curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
        chmod +x ./aws-iam-authenticator
        sudo mv aws-iam-authenticator /usr/local/bin/

    - name: Configure kubectl
      run: |
        mkdir -p ~/.kube
        
        # Create kubeconfig using aws-iam-authenticator
        cat > ~/.kube/config << EOF
        apiVersion: v1
        kind: Config
        clusters:
        - cluster:
            server: $(aws eks describe-cluster --name ${{ env.EKS_CLUSTER }} --query "cluster.endpoint" --output text)
            certificate-authority-data: $(aws eks describe-cluster --name ${{ env.EKS_CLUSTER }} --query "cluster.certificateAuthority.data" --output text)
          name: kubernetes
        contexts:
        - context:
            cluster: kubernetes
            user: aws
          name: aws
        current-context: aws
        users:
        - name: aws
          user:
            exec:
              apiVersion: client.authentication.k8s.io/v1alpha1
              command: aws-iam-authenticator
              args:
                - "token"
                - "-i"
                - "${{ env.EKS_CLUSTER }}"
        EOF

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Update the image in the deployment file
        sed -i "s|image:.*|image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|" kubernetes/plantasia.yaml
        
        # Apply the deployment with validation disabled
        kubectl apply --validate=false -f kubernetes/plantasia.yaml
        
        # Verify deployment
        kubectl rollout status deployment/plantasia